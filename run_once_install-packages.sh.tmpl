#!/usr/bin/env bash

set -o xtrace -o errexit

if [ ! -f $HOME/.pixi/bin/pixi ]; then
{{ if eq .chezmoi.os "darwin" -}}
    export PIXI_VERSION=v0.38.0
{{end }}
    curl -fsSL https://pixi.sh/install.sh | bash
    if [ ! -f $HOME/.bashrc ]; then
        echo 'PATH="${HOME}/.pixi/bin:${PATH}"' >> ${HOME}/.bashrc
    else
        if [ ! grep -q 'PATH="${HOME}/.pixi/bin:${PATH}"' < ${HOME}/.bashrc ]; then
            echo 'PATH="${HOME}/.pixi/bin:${PATH}"' >> ${HOME}/.bashrc
        fi
        if [ ! grep -q 'unset FPATH' < ${HOME}/.bashrc ]; then
            echo 'unset FPATH' >> ${HOME}/.bashrc
        fi
    fi
fi

export PATH="$HOME/.pixi/bin:${PATH}"

pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/package_list)
pixi global expose remove parallel rename
{{ if eq .chezmoi.os "linux" -}}
pixi global expose remove kill
{{ end }}
pixi global install -c dnachun -c conda-forge coreutils \
    parallel \
    rename
if [ -z ${SKIP_PYTHON} ]; then
    pixi global install python=3.12
    pixi global install -c dnachun -c conda-forge --environment python $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/python_packages)
fi
if [ -z ${SKIP_R} ]; then
    pixi global install r-base=4.3
    pixi global install -c dnachun -c conda-forge --environment r-base r-languageserver r-colorout r-learnr r-tidyverse radian
    cp ${HOME}/.local/share/chezmoi/dot_config/chezmoi/Rprofile ${HOME}/.pixi/envs/r-base/lib/R/etc/Rprofile.site
fi
{{ if eq .chezmoi.os "linux" -}}
pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/linux_packages)
pixi global expose remove kill uptime
pixi global install -c dnachun -c conda-forge procps-ng
{{ end }}
{{ if eq .chezmoi.os "darwin" -}}
pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/macos_packages)
brew update
brew bundle install --file=$HOME/.local/share/chezmoi/dot_config/chezmoi/Brewfile_casks
export FULL_INSTALL=1
{{ end }}
if [ ! -z ${FULL_INSTALL} ]; then
    pixi global install ruby
    pixi global install --environment ruby $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/ruby_packages)
    pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/large_packages)
    pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/huge_packages)
fi
{{ if eq .chezmoi.arch "amd64" -}}
pixi global install -c dnachun -c conda-forge $(tr '\n' ' ' < $HOME/.local/share/chezmoi/dot_config/chezmoi/intel_packages)
{{ end }}
if [[ ${CI} != "true" ]]; then
    pixi self-update
fi

micromamba shell init --shell=bash $HOME/micromamba
micromamba shell init --shell zsh
micromamba config prepend channels nodefaults
micromamba config prepend channels bioconda
micromamba config prepend channels conda-forge
micromamba config prepend channels dnachun

# Create config files for rstudio
mkdir -p ${HOME}/.config/rstudio
tee ${HOME}/.config/rstudio/database.conf << EOF
directory=${HOME}/.local/var/lib/rstudio-server
EOF

tee ${HOME}/.config/rstudio/rserver.conf << EOF
rsession-which-r=${HOME}/.pixi/envs/r-base/bin/R
auth-none=1
database-config-file=${HOME}/.config/rstudio/database.conf
server-daemonize=0
server-data-dir=${HOME}/.local/var/run/rstudio-server
server-user=${USER}
EOF

# To add
# citation-langserver
# languagetool-code-comments
# ltrs
# pick
# uutils-coreutils
# uutils-findutils
# skywalking-eyes

# Install
if [ ! -d $HOME/.local/share/zinit ]; then
    export NO_INPUT=1
    export NO_ANNEXES=1
    bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"
    zsh -c "source $HOME/.zshrc"
fi

if [ ! -d $HOME/.config/base16-shell ]; then
    git clone https://github.com/chriskempson/base16-shell.git $HOME/.config/base16-shell
fi

if [ ! -d $HOME/.tmux/plugins/tpm ]; then
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    $HOME/.tmux/plugins/tpm/bin/install_plugins
fi

if [ ! -d $HOME/.config/ranger/plugins/ranger_devicons ]; then
    git clone https://github.com/alexanderjeurissen/ranger_devicons $HOME/.config/ranger/plugins/ranger_devicons
fi

#!/usr/bin/env bash

set -o xtrace -o pipefail -o errexit

{{ if eq .chezmoi.os "linux" -}}
if [[ -z ${USE_PIXI} ]]; then
    if [ ! -f $HOME/.local/bin/micromamba ]; then
        PATH=$HOME/.local/bin:$PATH
        mkdir -p $HOME/.local/bin
        "${SHELL}" <(curl -L micro.mamba.pm/install.sh)
    fi
    micromamba shell init --shell=bash $HOME/micromamba
    micromamba shell init --shell zsh
    micromamba config prepend channels nodefaults
    micromamba config prepend channels bioconda
    micromamba config prepend channels conda-forge
    micromamba config prepend channels dnachun

    export MAMBA_EXE="$HOME/.local/bin/micromamba"
    export MAMBA_ROOT_PREFIX="$HOME/micromamba"
    micromamba config set auto_activate_base true
    . $HOME/micromamba/etc/profile.d/micromamba.sh
    micromamba activate
    micromamba install --yes $(tr '\n' ' ' < micromamba_packages) $(tr '\n' ' ' < package_list)
    # Do these after so they override conflicting files
    micromamba install --yes parallel rename
    conda init bash
    conda init zsh
    . $HOME/micromamba/etc/profile.d/conda.sh
    conda config --set auto_stack 1
else
    curl -fsSL https://pixi.sh/install.sh | bash
    export PATH=$HOME/.pixi/bin:${PATH}
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/package_list
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/pixi_packages
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/intel_packages
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/linux_packages

    micromamba shell init --shell=bash $HOME/micromamba
    micromamba shell init --shell zsh
    micromamba config prepend channels nodefaults
    micromamba config prepend channels bioconda
    micromamba config prepend channels conda-forge
    micromamba config prepend channels dnachun
fi

# To add
# bibparse
# citation-langserver 
# languagetool-code-comments 
# ltrs 
# pick
# uutils-coreutils 
# uutils-findutils 
# skywalking-eyes 
{{ end }}


{{ if eq .chezmoi.os "darwin" -}}
if [ ! command -v brew &> /dev/null ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

source $HOME/.bashrc
if [[ -z ${USE_PIXI} ]]; then
    brew bundle install --file=$HOME/.local/share/chezmoi/Brewfile
    if [ ! -f $HOME/.local/bin/micromamba ]; then
        PATH=$HOME/.local/bin:$PATH
        mkdir -p $HOME/.local/bin
        "${SHELL}" <(curl -L micro.mamba.pm/install.sh)
    fi
else
    curl -fsSL https://pixi.sh/install.sh | bash
    export PATH=$HOME/.pixi/bin:${PATH}
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/package_list
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/pixi_packages
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/macos_packages
    {{ if eq .chezmoi.arch "amd64" -}}
    xargs -I % pixi global install -c dnachun -c conda-forge % < $HOME/.local/share/chezmoi/intel_packages
    {{ end }}

    brew bundle install --file=$HOME/.local/share/chezmoi/Brewfile_casks
fi

micromamba shell init --shell=zsh $HOME/micromamba
micromamba config prepend channels nodefaults
micromamba config prepend channels bioconda
micromamba config prepend channels conda-forge
micromamba config prepend channels dnachun

{{ end }}

# Install 
if [ ! -d $HOME/.local/share/zinit ]; then
    export NO_INPUT=1
    export NO_ANNEXES=1
    bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"
    zsh -c "source $HOME/.zshrc"
fi

if [ ! -d $HOME/.config/base16-shell ]; then
    git clone https://github.com/chriskempson/base16-shell.git $HOME/.config/base16-shell
fi

if [ ! -d $HOME/.tmux/plugins/tpm ]; then
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    $HOME/.tmux/plugins/tpm/bin/install_plugins
fi

if [ ! -d $HOME/.config/ranger/plugins/ranger_devicons ]; then
    git clone https://github.com/alexanderjeurissen/ranger_devicons $HOME/.config/ranger/plugins/ranger_devicons
fi
